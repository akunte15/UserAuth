{"version":3,"sources":["../../../server/config/seed.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;qBACK,UAAU;;;;AAC5B,IAAI,KAAK,GAAG,mBAAM,KAAK,CAAC;AACxB,IAAI,IAAI,GAAG,mBAAM,IAAI,CAAC;;AAEtB,KAAK,CAAC,IAAI,EAAE,CACP,IAAI,CAAC,YAAY;AACd,WAAO,KAAK,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;CACrC,CAAC,CACD,IAAI,CAAC,YAAY;AACd,SAAK,CAAC,UAAU,CAAC,CAAC;AACd,YAAI,EAAE,mBAAmB;AACzB,YAAI,EAAE,qEAAqE,GAC3E,+DAA+D,GAC/D,yBAAyB;KAC5B,EAAE;AACC,YAAI,EAAE,+BAA+B;AACrC,YAAI,EAAE,yDAAyD,GAC/D,sBAAsB;KACzB,EAAE;AACC,YAAI,EAAE,oBAAoB;AAC1B,YAAI,EAAE,0DAA0D,GAChE,2DAA2D,GAC3D,6BAA6B;KAChC,EAAE;AACC,YAAI,EAAE,mBAAmB;AACzB,YAAI,EAAE,4DAA4D,GAClE,0CAA0C;KAC7C,EAAE;AACC,YAAI,EAAE,iBAAiB;AACvB,YAAI,EAAE,+DAA+D,GACrE,gEAAgE,GAChE,oBAAoB;KACvB,EAAE;AACC,YAAI,EAAE,kBAAkB;AACxB,YAAI,EAAE,gEAAgE,GACtE,6BAA6B;KAChC,CAAC,CAAC,CAAC;CACP,CAAC,CAAC;;AAEP,IAAI,CAAC,IAAI,EAAE,CACN,IAAI,CAAC,YAAY;AACd,WAAO,IAAI,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,EAAE,EAAC,CAAC,CAAC;CACpC,CAAC,CACD,IAAI,CAAC,YAAY;AACd,QAAI,CAAC,UAAU,CAAC;;;;;;;;;;;;;;;AAeZ;AACI,gBAAQ,EAAE,OAAO;AACjB,YAAI,EAAE,OAAO;AACb,aAAK,EAAE,iBAAiB;AACxB,gBAAQ,EAAE,OAAO;KACpB,EAAE;AACC,gBAAQ,EAAE,OAAO;AACjB,YAAI,EAAE,OAAO;AACb,YAAI,EAAE,aAAa;AACnB,aAAK,EAAE,uBAAuB;AAC9B,gBAAQ,EAAE,MAAM;KACnB,EAAE;AACC,gBAAQ,EAAE,OAAO;AACjB,YAAI,EAAE,OAAO;AACb,YAAI,EAAE,aAAa;AACnB,aAAK,EAAE,cAAc;AACrB,gBAAQ,EAAE,MAAM;KACnB,EAAE;AACC,gBAAQ,EAAE,OAAO;AACjB,YAAI,EAAE,MAAM;AACZ,YAAI,EAAE,YAAY;AAClB,aAAK,EAAE,eAAe;AACtB,gBAAQ,EAAE,MAAM;KACnB,CACJ,CAAC,CACG,IAAI,CAAC,YAAY;AACd,eAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;KAC5C,CAAC,CAAC;CACV,CAAC,CAAC","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport sqldb from '../sqldb';\nvar Thing = sqldb.Thing;\nvar User = sqldb.User;\n\nThing.sync()\n    .then(function () {\n        return Thing.destroy({where: {}});\n    })\n    .then(function () {\n        Thing.bulkCreate([{\n            name: 'Development Tools',\n            info: 'Integration with popular tools such as Bower, Grunt, Babel, Karma, ' +\n            'Mocha, JSHint, Node Inspector, Livereload, Protractor, Jade, ' +\n            'Stylus, Sass, and Less.'\n        }, {\n            name: 'Server and Client integration',\n            info: 'Built with a powerful and fun stack: MongoDB, Express, ' +\n            'AngularJS, and Node.'\n        }, {\n            name: 'Smart Build System',\n            info: 'Build system ignores `spec` files, allowing you to keep ' +\n            'tests alongside code. Automatic injection of scripts and ' +\n            'styles into your index.html'\n        }, {\n            name: 'Modular Structure',\n            info: 'Best practice client and server structures allow for more ' +\n            'code reusability and maximum scalability'\n        }, {\n            name: 'Optimized Build',\n            info: 'Build process packs up your templates as a single JavaScript ' +\n            'payload, minifies your scripts/css/images, and rewrites asset ' +\n            'names for caching.'\n        }, {\n            name: 'Deployment Ready',\n            info: 'Easily deploy your app to Heroku or Openshift with the heroku ' +\n            'and openshift subgenerators'\n        }]);\n    });\n\nUser.sync()\n    .then(function () {\n        return User.destroy({where: {}});\n    })\n    .then(function () {\n        User.bulkCreate([\n            /*\n             {\n             provider: 'local',\n             name: 'Test User',\n             email: 'test@example.com',\n             password: 'test'\n             }, {\n             provider: 'local',\n             role: 'admin',\n             name: 'Admin',\n             email: 'admin@example.com',\n             password: 'admin'\n             }\n             */\n            {\n                provider: 'local',\n                name: 'Guest',\n                email: 'guest@guest.com',\n                password: 'guest'\n            }, {\n                provider: 'local',\n                role: 'guest',\n                name: 'Scott Guest',\n                email: 'scottnakada@gmail.com',\n                password: 'pass'\n            }, {\n                provider: 'local',\n                role: 'admin',\n                name: 'Scott Admin',\n                email: 'sn@gmail.com',\n                password: 'pass'\n            }, {\n                provider: 'local',\n                role: 'user',\n                name: 'Scott User',\n                email: 'smn@gmail.com',\n                password: 'pass'\n            }\n        ])\n            .then(function () {\n                console.log('finished populating users');\n            });\n    });\n"]}